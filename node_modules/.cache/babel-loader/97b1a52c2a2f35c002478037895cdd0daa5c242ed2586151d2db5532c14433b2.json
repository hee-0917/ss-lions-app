{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GameSchedule=()=>{const calculatePreSaleDate=date=>{const gameDate=new Date(date);const dayOfWeek=gameDate.getDay();// 0: 일요일, 1: 월요일, ..., 6: 토요일\n// 경기일로부터 1주 전 날짜 계산\nconst oneWeekBefore=new Date(gameDate);oneWeekBefore.setDate(gameDate.getDate()-7);// 요일에 따라 선예매일 결정\n// 일요일 경기는 전주 수요일, 그 외는 전주 일요일\nif(dayOfWeek===0){// 일요일 경기\noneWeekBefore.setDate(oneWeekBefore.getDate()-4);// 수요일로 조정\n}else{oneWeekBefore.setDate(oneWeekBefore.getDate()-dayOfWeek);// 일요일로 조정\n}// 오후 2시로 시간 설정\noneWeekBefore.setHours(14,0,0,0);return oneWeekBefore.toLocaleDateString('ko-KR',{year:'numeric',month:'long',day:'numeric',weekday:'long',hour:'2-digit',minute:'2-digit'});};const games=[{date:'2025-04-01',opponent:'키움 히어로즈',time:'18:30',stadium:'대구삼성라이온즈파크',preSaleDate:''},{date:'2025-04-02',opponent:'키움 히어로즈',time:'18:30',stadium:'대구삼성라이온즈파크',preSaleDate:''},{date:'2025-04-04',opponent:'KIA 타이거즈',time:'18:30',stadium:'대구삼성라이온즈파크',preSaleDate:''},{date:'2025-04-05',opponent:'KIA 타이거즈',time:'18:30',stadium:'대구삼성라이온즈파크',preSaleDate:''},{date:'2025-04-06',opponent:'KIA 타이거즈',time:'14:00',stadium:'대구삼성라이온즈파크',preSaleDate:''}].map(game=>({...game,preSaleDate:calculatePreSaleDate(game.date)}));return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"\\uB0A0\\uC9DC\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC0C1\\uB300\\uD300\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC2DC\\uAC04\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uAD6C\\uC7A5\"}),/*#__PURE__*/_jsx(\"th\",{children:\"\\uC120\\uC608\\uB9E4\\uC77C\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:games.map((game,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:new Date(game.date).toLocaleDateString('ko-KR',{year:'numeric',month:'long',day:'numeric',weekday:'long'})}),/*#__PURE__*/_jsx(\"td\",{children:game.opponent}),/*#__PURE__*/_jsx(\"td\",{children:game.time}),/*#__PURE__*/_jsx(\"td\",{children:game.stadium}),/*#__PURE__*/_jsx(\"td\",{children:game.preSaleDate})]},index))})]})});};export default GameSchedule;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","GameSchedule","calculatePreSaleDate","date","gameDate","Date","dayOfWeek","getDay","oneWeekBefore","setDate","getDate","setHours","toLocaleDateString","year","month","day","weekday","hour","minute","games","opponent","time","stadium","preSaleDate","map","game","children","index"],"sources":["/workspace/ss-lions-app/src/components/GameSchedule.tsx"],"sourcesContent":["import React from 'react';\n\ninterface Game {\n  date: string;\n  opponent: string;\n  time: string;\n  stadium: string;\n  preSaleDate: string;\n}\n\nconst GameSchedule: React.FC = () => {\n  const calculatePreSaleDate = (date: string): string => {\n    const gameDate = new Date(date);\n    const dayOfWeek = gameDate.getDay(); // 0: 일요일, 1: 월요일, ..., 6: 토요일\n    \n    // 경기일로부터 1주 전 날짜 계산\n    const oneWeekBefore = new Date(gameDate);\n    oneWeekBefore.setDate(gameDate.getDate() - 7);\n    \n    // 요일에 따라 선예매일 결정\n    // 일요일 경기는 전주 수요일, 그 외는 전주 일요일\n    if (dayOfWeek === 0) { // 일요일 경기\n      oneWeekBefore.setDate(oneWeekBefore.getDate() - 4); // 수요일로 조정\n    } else {\n      oneWeekBefore.setDate(oneWeekBefore.getDate() - dayOfWeek); // 일요일로 조정\n    }\n    \n    // 오후 2시로 시간 설정\n    oneWeekBefore.setHours(14, 0, 0, 0);\n    \n    return oneWeekBefore.toLocaleDateString('ko-KR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      weekday: 'long',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const games: Game[] = [\n    {\n      date: '2025-04-01',\n      opponent: '키움 히어로즈',\n      time: '18:30',\n      stadium: '대구삼성라이온즈파크',\n      preSaleDate: ''\n    },\n    {\n      date: '2025-04-02',\n      opponent: '키움 히어로즈',\n      time: '18:30',\n      stadium: '대구삼성라이온즈파크',\n      preSaleDate: ''\n    },\n    {\n      date: '2025-04-04',\n      opponent: 'KIA 타이거즈',\n      time: '18:30',\n      stadium: '대구삼성라이온즈파크',\n      preSaleDate: ''\n    },\n    {\n      date: '2025-04-05',\n      opponent: 'KIA 타이거즈',\n      time: '18:30',\n      stadium: '대구삼성라이온즈파크',\n      preSaleDate: ''\n    },\n    {\n      date: '2025-04-06',\n      opponent: 'KIA 타이거즈',\n      time: '14:00',\n      stadium: '대구삼성라이온즈파크',\n      preSaleDate: ''\n    }\n  ].map(game => ({\n    ...game,\n    preSaleDate: calculatePreSaleDate(game.date)\n  }));\n\n  return (\n    <div>\n      <table>\n        <thead>\n          <tr>\n            <th>날짜</th>\n            <th>상대팀</th>\n            <th>시간</th>\n            <th>구장</th>\n            <th>선예매일</th>\n          </tr>\n        </thead>\n        <tbody>\n          {games.map((game, index) => (\n            <tr key={index}>\n              <td>{new Date(game.date).toLocaleDateString('ko-KR', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                weekday: 'long'\n              })}</td>\n              <td>{game.opponent}</td>\n              <td>{game.time}</td>\n              <td>{game.stadium}</td>\n              <td>{game.preSaleDate}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default GameSchedule; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}